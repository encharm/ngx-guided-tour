{"version":3,"file":"ngx-guided-tour.js.map","sources":["ng://ngx-guided-tour/lib/guided-tour.constants.ts","ng://ngx-guided-tour/lib/guided-tour.service.ts","ng://ngx-guided-tour/lib/guided-tour.component.ts","ng://ngx-guided-tour/lib/guided-tour.module.ts"],"sourcesContent":["\nexport interface TourStep {\n    /** Selector for element that will be highlighted */\n    selector?: string;\n    /** Tour title text */\n    title?: string;\n    /** Tour step text */\n    content: string;\n    /** Where the tour step will appear next to the selected element */\n    orientation?: Orientation | OrientationConfiguration[];\n    /** Action that happens when the step is opened */\n    action?: () => void;\n    /** Action that happens when the step is closed */\n    closeAction?: () => void;\n    /** Skips this step, this is so you do not have create multiple tour configurations based on user settings/configuration */\n    skipStep?: boolean;\n    /** Adds some padding for things like sticky headers when scrolling to an element */\n    scrollAdjustment?: number;\n    /** Adds default padding around tour highlighting. Does not need to be true for highlightPadding to work */\n    useHighlightPadding?: boolean;\n    /** Adds padding around tour highlighting in pixels, this overwrites the default for this step. Is not dependent on useHighlightPadding being true */\n    highlightPadding?: number;\n}\n\nexport interface GuidedTour {\n    /** Identifier for tour */\n    tourId: string;\n    /** Use orb to start tour */\n    useOrb?: boolean;\n    /** Steps fo the tour */\n    steps: TourStep[];\n    /** Function will be called when tour is skipped */\n    skipCallback?: (stepSkippedOn: number) => void;\n    /** Function will be called when tour is completed */\n    completeCallback?: () => void;\n    /** Minimum size of screen in pixels before the tour is run, if the tour is resized below this value the user will be told to resize */\n    minimumScreenSize?: number;\n    /**\n     * Prevents the tour from advancing by clicking the backdrop.\n     * This should only be set if you are completely sure your tour is displaying correctly on all screen sizes otherwise a user can get stuck.\n     */\n    preventBackdropFromAdvancing?: boolean;\n}\n\nexport interface OrientationConfiguration {\n    /** Where the tour step will appear next to the selected element */\n    orientationDirection: Orientation;\n    /** When this orientation configuration starts in pixels */\n    maximumSize?: number;\n}\n\nexport class Orientation {\n    public static readonly Bottom = 'bottom';\n    public static readonly BottomLeft = 'bottom-left';\n    public static readonly BottomRight = 'bottom-right';\n    public static readonly Center = 'center';\n    public static readonly Left = 'left';\n    public static readonly Right = 'right';\n    public static readonly Top = 'top';\n    public static readonly TopLeft = 'top-left';\n    public static readonly TopRight = 'top-right';\n}\n","import { debounceTime } from 'rxjs/internal/operators';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Observable, Subject, fromEvent } from 'rxjs';\nimport { GuidedTour, TourStep, Orientation, OrientationConfiguration } from './guided-tour.constants';\nimport { cloneDeep } from 'lodash';\n\n@Injectable()\nexport class GuidedTourService {\n    public guidedTourCurrentStepStream: Observable<TourStep>;\n    public guidedTourOrbShowingStream: Observable<boolean>;\n\n    private _guidedTourCurrentStepSubject = new Subject<TourStep>();\n    private _guidedTourOrbShowingSubject = new Subject<boolean>();\n    private _currentTourStepIndex = 0;\n    private _currentTour: GuidedTour = null;\n    private _onFirstStep = true;\n    private _onLastStep = true;\n    private _onResizeMessage = false;\n\n    constructor(\n        public errorHandler: ErrorHandler\n    ) {\n        this.guidedTourCurrentStepStream = this._guidedTourCurrentStepSubject.asObservable();\n        this.guidedTourOrbShowingStream = this._guidedTourOrbShowingSubject.asObservable();\n\n        fromEvent(window, 'resize').pipe(debounceTime(200)).subscribe(() => {\n            if (this._currentTour && this._currentTourStepIndex > -1) {\n                if (this._currentTour.minimumScreenSize && this._currentTour.minimumScreenSize >= window.innerWidth) {\n                    this._onResizeMessage = true;\n                    this._guidedTourCurrentStepSubject.next({\n                        title: 'Please resize',\n                        content: 'You have resized the tour to a size that is too small to continue. Please resize the browser to a larger size to continue the tour or close the tour.'\n                    });\n                } else {\n                    this._onResizeMessage = false;\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                }\n            }\n        });\n    }\n\n    public nextStep(): void {\n        if (this._currentTour.steps[this._currentTourStepIndex].closeAction) {\n            this._currentTour.steps[this._currentTourStepIndex].closeAction();\n        }\n        if (this._currentTour.steps[this._currentTourStepIndex + 1]) {\n            this._currentTourStepIndex++;\n            this._setFirstAndLast();\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n                // Usually an action is opening something so we need to give it time to render.\n                setTimeout(() => {\n                    if (this._checkSelectorValidity()) {\n                        this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                    } else {\n                        this.nextStep();\n                    }\n                });\n            } else {\n                if (this._checkSelectorValidity()) {\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                } else {\n                    this.nextStep();\n                }\n            }\n        } else {\n            if (this._currentTour.completeCallback) {\n                this._currentTour.completeCallback();\n            }\n            this.resetTour();\n        }\n    }\n\n    public backStep(): void {\n        if (this._currentTour.steps[this._currentTourStepIndex].closeAction) {\n            this._currentTour.steps[this._currentTourStepIndex].closeAction();\n        }\n        if (this._currentTour.steps[this._currentTourStepIndex - 1]) {\n            this._currentTourStepIndex--;\n            this._setFirstAndLast();\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n                setTimeout(() => {\n                    if (this._checkSelectorValidity()) {\n                        this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                    } else {\n                        this.backStep();\n                    }\n                });\n            } else {\n                if (this._checkSelectorValidity()) {\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                } else {\n                    this.backStep();\n                }\n            }\n        } else {\n            this.resetTour();\n        }\n    }\n\n    public skipTour(): void {\n        if (this._currentTour.skipCallback) {\n            this._currentTour.skipCallback(this._currentTourStepIndex);\n        }\n        this.resetTour();\n    }\n\n    public resetTour(): void {\n        document.body.classList.remove('tour-open');\n        this._currentTour = null;\n        this._currentTourStepIndex = 0;\n        this._guidedTourCurrentStepSubject.next(null);\n    }\n\n    public startTour(tour: GuidedTour): void {\n        this._currentTour = cloneDeep(tour);\n        this._currentTour.steps = this._currentTour.steps.filter(step => !step.skipStep);\n        this._currentTourStepIndex = 0;\n        this._setFirstAndLast();\n        this._guidedTourOrbShowingSubject.next(this._currentTour.useOrb);\n        if (\n            this._currentTour.steps.length > 0\n            && (!this._currentTour.minimumScreenSize\n                || (window.innerWidth >= this._currentTour.minimumScreenSize))\n        ) {\n            if (!this._currentTour.useOrb) {\n                document.body.classList.add('tour-open');\n            }\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n            }\n            if (this._checkSelectorValidity()) {\n                this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n            } else {\n                this.nextStep();\n            }\n        }\n    }\n\n    public activateOrb(): void {\n        this._guidedTourOrbShowingSubject.next(false);\n        document.body.classList.add('tour-open');\n    }\n\n    private _setFirstAndLast(): void {\n        this._onLastStep = (this._currentTour.steps.length - 1) === this._currentTourStepIndex;\n        this._onFirstStep = this._currentTourStepIndex === 0;\n    }\n\n    private _checkSelectorValidity(): boolean {\n        if (this._currentTour.steps[this._currentTourStepIndex].selector) {\n            const selectedElement = document.querySelector(this._currentTour.steps[this._currentTourStepIndex].selector);\n            if (!selectedElement) {\n                this.errorHandler.handleError(\n                    // If error handler is configured this should not block the browser.\n                    new Error(`Error finding selector ${this._currentTour.steps[this._currentTourStepIndex].selector} on step ${this._currentTourStepIndex + 1} during guided tour: ${this._currentTour.tourId}`)\n                );\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public get onLastStep(): boolean {\n        return this._onLastStep;\n    }\n\n    public get onFirstStep(): boolean {\n        return this._onFirstStep;\n    }\n\n    public get onResizeMessage(): boolean {\n        return this._onResizeMessage;\n    }\n\n    public get currentTourStepDisplay(): number {\n        return this._currentTourStepIndex + 1;\n    }\n\n    public get currentTourStepCount(): number {\n        return this._currentTour && this._currentTour.steps ? this._currentTour.steps.length : 0;\n    }\n\n    public get preventBackdropFromAdvancing(): boolean {\n        return this._currentTour && this._currentTour.preventBackdropFromAdvancing;\n    }\n\n    private getPreparedTourStep(index: number): TourStep {\n        return this.setTourOrientation(this._currentTour.steps[index]);\n    }\n\n    private setTourOrientation(step: TourStep): TourStep {\n        const convertedStep = cloneDeep(step);\n        if (\n            convertedStep.orientation\n            && !(typeof convertedStep.orientation === 'string')\n            && (convertedStep.orientation as OrientationConfiguration[]).length\n        ) {\n            (convertedStep.orientation as OrientationConfiguration[]).sort((a: OrientationConfiguration, b: OrientationConfiguration) => {\n                if (!b.maximumSize) {\n                    return 1;\n                }\n                if (!a.maximumSize) {\n                    return -1;\n                }\n                return b.maximumSize - a.maximumSize;\n            });\n\n            let currentOrientation: Orientation = Orientation.Top;\n            (convertedStep.orientation as OrientationConfiguration[]).forEach(\n                (orientationConfig: OrientationConfiguration) => {\n                    if (!orientationConfig.maximumSize || window.innerWidth <= orientationConfig.maximumSize) {\n                        currentOrientation = orientationConfig.orientationDirection;\n                    }\n                }\n            );\n\n            convertedStep.orientation = currentOrientation;\n        }\n        return convertedStep;\n    }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { Orientation, TourStep } from './guided-tour.constants';\nimport { GuidedTourService } from './guided-tour.service';\n\n@Component({\n    selector: 'ngx-guided-tour',\n    template: `\n        <div *ngIf=\"currentTourStep && selectedElementRect && isOrbShowing\"\n                (mouseenter)=\"handleOrb()\"\n                class=\"tour-orb tour-{{ currentTourStep.orientation }}\"\n                [style.top.px]=\"orbTopPosition\"\n                [style.left.px]=\"orbLeftPosition\"\n                [style.transform]=\"orbTransform\">\n                <div class=\"tour-orb-ring\"></div>\n        </div>\n        <div *ngIf=\"currentTourStep && !isOrbShowing\">\n            <div class=\"guided-tour-user-input-mask\" (click)=\"backdropClick($event)\"></div>\n            <div class=\"guided-tour-spotlight-overlay\"\n                [style.top.px]=\"overlayTop\"\n                [style.left.px]=\"overlayLeft\"\n                [style.height.px]=\"overlayHeight\"\n                [style.width.px]=\"overlayWidth\">\n            </div>\n        </div>\n        <div *ngIf=\"currentTourStep && !isOrbShowing\">\n            <div #tourStep *ngIf=\"currentTourStep\"\n                class=\"tour-step tour-{{ currentTourStep.orientation }}\"\n                [ngClass]=\"{\n                    'page-tour-step': !currentTourStep.selector\n                }\"\n                [style.top.px]=\"(currentTourStep.selector && selectedElementRect ? topPosition : null)\"\n                [style.left.px]=\"(currentTourStep.selector && selectedElementRect ? leftPosition : null)\"\n                [style.width.px]=\"(currentTourStep.selector && selectedElementRect ? calculatedTourStepWidth : null)\"\n                [style.transform]=\"(currentTourStep.selector && selectedElementRect ? transform : null)\">\n                <div *ngIf=\"currentTourStep.selector\" class=\"tour-arrow\"></div>\n                <div class=\"tour-block\">\n                    <h3 class=\"tour-title\" *ngIf=\"currentTourStep.title && currentTourStep.selector\">\n                        {{ currentTourStep.title }}\n                    </h3>\n                    <h2 class=\"tour-title\" *ngIf=\"currentTourStep.title && !currentTourStep.selector\">\n                        {{ currentTourStep.title }}\n                    </h2>\n                    <div class=\"tour-content\" [innerHTML]=\"currentTourStep.content\"></div>\n                    <div class=\"tour-buttons\">\n                        <button *ngIf=\"!guidedTourService.onResizeMessage\"\n                            (click)=\"guidedTourService.skipTour()\"\n                            class=\"skip-button link-button\">\n                            Skip\n                        </button>\n                        <button *ngIf=\"!guidedTourService.onLastStep && !guidedTourService.onResizeMessage\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.nextStep()\">\n                            Next&nbsp;&nbsp;{{ guidedTourService.currentTourStepDisplay }}/{{ guidedTourService.currentTourStepCount }}\n                        </button>\n                        <button *ngIf=\"guidedTourService.onLastStep\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.nextStep()\">\n                            Done\n                        </button>\n\n                        <button *ngIf=\"guidedTourService.onResizeMessage\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.resetTour()\">\n                            Close\n                        </button>\n                        <button *ngIf=\"!guidedTourService.onFirstStep && !guidedTourService.onResizeMessage\"\n                            class=\"back-button link-button\"\n                            (click)=\"guidedTourService.backStep()\">\n                            Back\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./guided-tour.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class GuidedTourComponent implements AfterViewInit, OnDestroy {\n    @Input() public topOfPageAdjustment ?= 0;\n    @Input() public tourStepWidth ?= 300;\n    @Input() public minimalTourStepWidth ?= 200;\n    @ViewChild('tourStep') public tourStep: ElementRef;\n    public highlightPadding = 4;\n    public currentTourStep: TourStep = null;\n    public selectedElementRect: DOMRect = null;\n    public isOrbShowing = false;\n\n    private _announcementsCount = 0;\n    private resizeSubscription: Subscription;\n    private scrollSubscription: Subscription;\n\n    constructor(\n        public guidedTourService: GuidedTourService\n    ) { }\n\n    private get maxWidthAdjustmentForTourStep(): number {\n        return this.tourStepWidth - this.minimalTourStepWidth;\n    }\n\n    private get widthAdjustmentForScreenBound(): number {\n        if (!this.tourStep) {\n            return 0;\n        }\n        let adjustment = 0;\n        if (this.calculatedLeftPosition < 0) {\n            adjustment = -this.calculatedLeftPosition;\n        }\n        if (this.calculatedLeftPosition > window.innerWidth - this.tourStepWidth) {\n            adjustment = this.calculatedLeftPosition - (window.innerWidth - this.tourStepWidth);\n        }\n\n        return Math.min(this.maxWidthAdjustmentForTourStep, adjustment);\n    }\n\n    public get calculatedTourStepWidth() {\n        return this.tourStepWidth - this.widthAdjustmentForScreenBound;\n    }\n\n    public ngAfterViewInit(): void {\n        this.guidedTourService.guidedTourCurrentStepStream.subscribe((step: TourStep) => {\n            this.currentTourStep = step;\n            if (step && step.selector) {\n                const selectedElement = document.querySelector(step.selector);\n                if (selectedElement) {\n                    this.scrollToAndSetElement();\n                } else {\n                    this.selectedElementRect = null;\n                }\n            } else {\n                this.selectedElementRect = null;\n            }\n        });\n\n        this.guidedTourService.guidedTourOrbShowingStream.subscribe((value: boolean) => {\n            this.isOrbShowing = value;\n        });\n\n        this.resizeSubscription = fromEvent(window, 'resize').subscribe(() => {\n            this.updateStepLocation();\n        });\n\n        this.scrollSubscription = fromEvent(window, 'scroll').subscribe(() => {\n            this.updateStepLocation();\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.resizeSubscription.unsubscribe();\n        this.scrollSubscription.unsubscribe();\n    }\n\n    public scrollToAndSetElement(): void {\n        this.updateStepLocation();\n        // Allow things to render to scroll to the correct location\n        setTimeout(() => {\n            if (!this.isOrbShowing && !this.isTourOnScreen()) {\n                if (this.selectedElementRect && this.isBottom()) {\n                    // Scroll so the element is on the top of the screen.\n                    const topPos = ((window.scrollY + this.selectedElementRect.top) - this.topOfPageAdjustment)\n                        - (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                        + this.getStepScreenAdjustment();\n                    try {\n                        window.scrollTo({\n                            left: null,\n                            top: topPos,\n                            behavior: 'smooth'\n                        });\n                    } catch (err) {\n                        if (err instanceof TypeError) {\n                            window.scroll(0, topPos);\n                        } else {\n                            throw err;\n                        }\n                    }\n                } else {\n                    // Scroll so the element is on the bottom of the screen.\n                    const topPos = (window.scrollY + this.selectedElementRect.top + this.selectedElementRect.height)\n                        - window.innerHeight\n                        + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                        - this.getStepScreenAdjustment();\n                    try {\n                        window.scrollTo({\n                            left: null,\n                            top: topPos,\n                            behavior: 'smooth'\n                        });\n                    } catch (err) {\n                        if (err instanceof TypeError) {\n                            window.scroll(0, topPos);\n                        } else {\n                            throw err;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    public handleOrb(): void {\n        this.guidedTourService.activateOrb();\n        if (this.currentTourStep && this.currentTourStep.selector) {\n            this.scrollToAndSetElement();\n        }\n    }\n\n    private isTourOnScreen(): boolean {\n        return this.tourStep\n            && this.elementInViewport(document.querySelector(this.currentTourStep.selector))\n            && this.elementInViewport(this.tourStep.nativeElement);\n    }\n\n    // Modified from https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    private elementInViewport(element: HTMLElement): boolean {\n        let top = element.offsetTop;\n        const height = element.offsetHeight;\n\n        while (element.offsetParent) {\n            element = (element.offsetParent as HTMLElement);\n            top += element.offsetTop;\n        }\n        if (this.isBottom()) {\n            return (\n                top >= (window.pageYOffset\n                    + this.topOfPageAdjustment\n                    + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                    + this.getStepScreenAdjustment())\n                && (top + height) <= (window.pageYOffset + window.innerHeight)\n            );\n        } else {\n            return (\n                top >= (window.pageYOffset + this.topOfPageAdjustment - this.getStepScreenAdjustment())\n                && (top + height + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)) <= (window.pageYOffset + window.innerHeight)\n            );\n        }\n    }\n\n    public backdropClick(event: Event): void {\n        if (this.guidedTourService.preventBackdropFromAdvancing) {\n            event.stopPropagation();\n        } else {\n            this.guidedTourService.nextStep();\n        }\n    }\n\n    public updateStepLocation(): void {\n        if (this.currentTourStep && this.currentTourStep.selector) {\n            const selectedElement = document.querySelector(this.currentTourStep.selector);\n            if (selectedElement) {\n                this.selectedElementRect = (selectedElement.getBoundingClientRect() as DOMRect);\n            } else {\n                this.selectedElementRect = null;\n            }\n        } else {\n            this.selectedElementRect = null;\n        }\n    }\n\n    private isBottom(): boolean {\n        return this.currentTourStep.orientation\n            && (this.currentTourStep.orientation === Orientation.Bottom\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n            || this.currentTourStep.orientation === Orientation.BottomRight);\n    }\n\n    public get topPosition(): number {\n        const paddingAdjustment = this.getHighlightPadding();\n\n        if (this.isBottom()) {\n            return this.selectedElementRect.top + this.selectedElementRect.height + paddingAdjustment;\n        }\n\n        return this.selectedElementRect.top - this.getHighlightPadding();\n    }\n\n    public get orbTopPosition(): number {\n        if (this.isBottom()) {\n            return this.selectedElementRect.top + this.selectedElementRect.height;\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.Right\n            || this.currentTourStep.orientation === Orientation.Left\n        ) {\n            return (this.selectedElementRect.top + (this.selectedElementRect.height / 2));\n        }\n\n        return this.selectedElementRect.top;\n    }\n\n    private get calculatedLeftPosition(): number {\n        const paddingAdjustment = this.getHighlightPadding();\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return (this.selectedElementRect.right - this.tourStepWidth);\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return (this.selectedElementRect.left);\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Left) {\n            return this.selectedElementRect.left - this.tourStepWidth - paddingAdjustment;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Right) {\n            return (this.selectedElementRect.left + this.selectedElementRect.width + paddingAdjustment);\n        }\n\n        return (this.selectedElementRect.right - (this.selectedElementRect.width / 2) - (this.tourStepWidth / 2));\n    }\n\n    public get leftPosition(): number {\n        if (this.calculatedLeftPosition >= 0) {\n            return this.calculatedLeftPosition;\n        }\n        const adjustment = Math.max(0, -this.calculatedLeftPosition)\n        const maxAdjustment = Math.min(this.maxWidthAdjustmentForTourStep, adjustment);\n        return this.calculatedLeftPosition + maxAdjustment;\n    }\n\n    public get orbLeftPosition(): number {\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return this.selectedElementRect.right;\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return this.selectedElementRect.left;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Left) {\n            return this.selectedElementRect.left;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Right) {\n            return (this.selectedElementRect.left + this.selectedElementRect.width);\n        }\n\n        return (this.selectedElementRect.right - (this.selectedElementRect.width / 2));\n    }\n\n    public get transform(): string {\n        if (\n            !this.currentTourStep.orientation\n            || this.currentTourStep.orientation === Orientation.Top\n            || this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.TopLeft\n        ) {\n            return 'translateY(-100%)';\n        }\n        return null;\n    }\n\n    public get orbTransform(): string {\n        if (\n            !this.currentTourStep.orientation\n            || this.currentTourStep.orientation === Orientation.Top\n            || this.currentTourStep.orientation === Orientation.Bottom\n            || this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return 'translateY(-50%)';\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return 'translate(-100%, -50%)';\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.Right\n            || this.currentTourStep.orientation === Orientation.Left\n        ) {\n            return 'translate(-50%, -50%)';\n        }\n\n        return null;\n    }\n\n    public get overlayTop(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.top - this.getHighlightPadding();\n        }\n        return 0;\n    }\n\n    public get overlayLeft(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.left - this.getHighlightPadding();\n        }\n        return 0;\n    }\n\n    public get overlayHeight(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.height + (this.getHighlightPadding() * 2);\n        }\n        return 0;\n    }\n\n    public get overlayWidth(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.width + (this.getHighlightPadding() * 2);\n        }\n        return 0;\n    }\n\n    private getHighlightPadding(): number {\n        let paddingAdjustment = this.currentTourStep.useHighlightPadding ? this.highlightPadding : 0;\n        if (this.currentTourStep.highlightPadding) {\n            paddingAdjustment = this.currentTourStep.highlightPadding;\n        }\n        return paddingAdjustment;\n    }\n\n    // This calculates a value to add or subtract so the step should not be off screen.\n    private getStepScreenAdjustment(): number {\n        if (\n            this.currentTourStep.orientation === Orientation.Left\n            || this.currentTourStep.orientation === Orientation.Right\n        ) {\n            return 0;\n        }\n        const elementHeight = this.selectedElementRect.height\n            + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n            + this.tourStep.nativeElement.getBoundingClientRect().height;\n\n        if ((window.innerHeight - this.topOfPageAdjustment) < elementHeight) {\n            return elementHeight - (window.innerHeight - this.topOfPageAdjustment);\n        }\n        return 0;\n    }\n}\n","import { GuidedTourService } from './guided-tour.service';\nimport { GuidedTourComponent } from './guided-tour.component';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\n\n@NgModule({\n    declarations: [\n        GuidedTourComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        GuidedTourComponent\n    ],\n    entryComponents: [\n        GuidedTourComponent\n    ]\n})\nexport class GuidedTourModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: GuidedTourModule,\n            providers: [\n                ErrorHandler,\n                GuidedTourService\n            ]\n        };\n    }\n}\n"],"names":[],"mappings":"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"}
