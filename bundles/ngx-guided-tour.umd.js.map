{"version":3,"file":"ngx-guided-tour.umd.js.map","sources":["ng://ngx-guided-tour/lib/guided-tour.constants.ts","ng://ngx-guided-tour/lib/guided-tour.service.ts","ng://ngx-guided-tour/lib/guided-tour.component.ts","ng://ngx-guided-tour/lib/guided-tour.module.ts"],"sourcesContent":["\nexport interface TourStep {\n    /** Selector for element that will be highlighted */\n    selector?: string;\n    /** Tour title text */\n    title?: string;\n    /** Tour step text */\n    content: string;\n    /** Where the tour step will appear next to the selected element */\n    orientation?: Orientation | OrientationConfiguration[];\n    /** Action that happens when the step is opened */\n    action?: () => void;\n    /** Action that happens when the step is closed */\n    closeAction?: () => void;\n    /** Skips this step, this is so you do not have create multiple tour configurations based on user settings/configuration */\n    skipStep?: boolean;\n    /** Adds some padding for things like sticky headers when scrolling to an element */\n    scrollAdjustment?: number;\n    /** Adds default padding around tour highlighting. Does not need to be true for highlightPadding to work */\n    useHighlightPadding?: boolean;\n    /** Adds padding around tour highlighting in pixels, this overwrites the default for this step. Is not dependent on useHighlightPadding being true */\n    highlightPadding?: number;\n}\n\nexport interface GuidedTour {\n    /** Identifier for tour */\n    tourId: string;\n    /** Use orb to start tour */\n    useOrb?: boolean;\n    /** Steps fo the tour */\n    steps: TourStep[];\n    /** Function will be called when tour is skipped */\n    skipCallback?: (stepSkippedOn: number) => void;\n    /** Function will be called when tour is completed */\n    completeCallback?: () => void;\n    /** Minimum size of screen in pixels before the tour is run, if the tour is resized below this value the user will be told to resize */\n    minimumScreenSize?: number;\n    /**\n     * Prevents the tour from advancing by clicking the backdrop.\n     * This should only be set if you are completely sure your tour is displaying correctly on all screen sizes otherwise a user can get stuck.\n     */\n    preventBackdropFromAdvancing?: boolean;\n}\n\nexport interface OrientationConfiguration {\n    /** Where the tour step will appear next to the selected element */\n    orientationDirection: Orientation;\n    /** When this orientation configuration starts in pixels */\n    maximumSize?: number;\n}\n\nexport class Orientation {\n    public static readonly Bottom = 'bottom';\n    public static readonly BottomLeft = 'bottom-left';\n    public static readonly BottomRight = 'bottom-right';\n    public static readonly Center = 'center';\n    public static readonly Left = 'left';\n    public static readonly Right = 'right';\n    public static readonly Top = 'top';\n    public static readonly TopLeft = 'top-left';\n    public static readonly TopRight = 'top-right';\n}\n","import { debounceTime } from 'rxjs/internal/operators';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Observable, Subject, fromEvent } from 'rxjs';\nimport { GuidedTour, TourStep, Orientation, OrientationConfiguration } from './guided-tour.constants';\nimport { cloneDeep } from 'lodash';\n\n@Injectable()\nexport class GuidedTourService {\n    public guidedTourCurrentStepStream: Observable<TourStep>;\n    public guidedTourOrbShowingStream: Observable<boolean>;\n\n    private _guidedTourCurrentStepSubject = new Subject<TourStep>();\n    private _guidedTourOrbShowingSubject = new Subject<boolean>();\n    private _currentTourStepIndex = 0;\n    private _currentTour: GuidedTour = null;\n    private _onFirstStep = true;\n    private _onLastStep = true;\n    private _onResizeMessage = false;\n\n    constructor(\n        public errorHandler: ErrorHandler\n    ) {\n        this.guidedTourCurrentStepStream = this._guidedTourCurrentStepSubject.asObservable();\n        this.guidedTourOrbShowingStream = this._guidedTourOrbShowingSubject.asObservable();\n\n        fromEvent(window, 'resize').pipe(debounceTime(200)).subscribe(() => {\n            if (this._currentTour && this._currentTourStepIndex > -1) {\n                if (this._currentTour.minimumScreenSize && this._currentTour.minimumScreenSize >= window.innerWidth) {\n                    this._onResizeMessage = true;\n                    this._guidedTourCurrentStepSubject.next({\n                        title: 'Please resize',\n                        content: 'You have resized the tour to a size that is too small to continue. Please resize the browser to a larger size to continue the tour or close the tour.'\n                    });\n                } else {\n                    this._onResizeMessage = false;\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                }\n            }\n        });\n    }\n\n    public nextStep(): void {\n        if (this._currentTour.steps[this._currentTourStepIndex].closeAction) {\n            this._currentTour.steps[this._currentTourStepIndex].closeAction();\n        }\n        if (this._currentTour.steps[this._currentTourStepIndex + 1]) {\n            this._currentTourStepIndex++;\n            this._setFirstAndLast();\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n                // Usually an action is opening something so we need to give it time to render.\n                setTimeout(() => {\n                    if (this._checkSelectorValidity()) {\n                        this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                    } else {\n                        this.nextStep();\n                    }\n                });\n            } else {\n                if (this._checkSelectorValidity()) {\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                } else {\n                    this.nextStep();\n                }\n            }\n        } else {\n            if (this._currentTour.completeCallback) {\n                this._currentTour.completeCallback();\n            }\n            this.resetTour();\n        }\n    }\n\n    public backStep(): void {\n        if (this._currentTour.steps[this._currentTourStepIndex].closeAction) {\n            this._currentTour.steps[this._currentTourStepIndex].closeAction();\n        }\n        if (this._currentTour.steps[this._currentTourStepIndex - 1]) {\n            this._currentTourStepIndex--;\n            this._setFirstAndLast();\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n                setTimeout(() => {\n                    if (this._checkSelectorValidity()) {\n                        this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                    } else {\n                        this.backStep();\n                    }\n                });\n            } else {\n                if (this._checkSelectorValidity()) {\n                    this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n                } else {\n                    this.backStep();\n                }\n            }\n        } else {\n            this.resetTour();\n        }\n    }\n\n    public skipTour(): void {\n        if (this._currentTour.skipCallback) {\n            this._currentTour.skipCallback(this._currentTourStepIndex);\n        }\n        this.resetTour();\n    }\n\n    public resetTour(): void {\n        document.body.classList.remove('tour-open');\n        this._currentTour = null;\n        this._currentTourStepIndex = 0;\n        this._guidedTourCurrentStepSubject.next(null);\n    }\n\n    public startTour(tour: GuidedTour): void {\n        this._currentTour = cloneDeep(tour);\n        this._currentTour.steps = this._currentTour.steps.filter(step => !step.skipStep);\n        this._currentTourStepIndex = 0;\n        this._setFirstAndLast();\n        this._guidedTourOrbShowingSubject.next(this._currentTour.useOrb);\n        if (\n            this._currentTour.steps.length > 0\n            && (!this._currentTour.minimumScreenSize\n                || (window.innerWidth >= this._currentTour.minimumScreenSize))\n        ) {\n            if (!this._currentTour.useOrb) {\n                document.body.classList.add('tour-open');\n            }\n            if (this._currentTour.steps[this._currentTourStepIndex].action) {\n                this._currentTour.steps[this._currentTourStepIndex].action();\n            }\n            if (this._checkSelectorValidity()) {\n                this._guidedTourCurrentStepSubject.next(this.getPreparedTourStep(this._currentTourStepIndex));\n            } else {\n                this.nextStep();\n            }\n        }\n    }\n\n    public activateOrb(): void {\n        this._guidedTourOrbShowingSubject.next(false);\n        document.body.classList.add('tour-open');\n    }\n\n    private _setFirstAndLast(): void {\n        this._onLastStep = (this._currentTour.steps.length - 1) === this._currentTourStepIndex;\n        this._onFirstStep = this._currentTourStepIndex === 0;\n    }\n\n    private _checkSelectorValidity(): boolean {\n        if (this._currentTour.steps[this._currentTourStepIndex].selector) {\n            const selectedElement = document.querySelector(this._currentTour.steps[this._currentTourStepIndex].selector);\n            if (!selectedElement) {\n                this.errorHandler.handleError(\n                    // If error handler is configured this should not block the browser.\n                    new Error(`Error finding selector ${this._currentTour.steps[this._currentTourStepIndex].selector} on step ${this._currentTourStepIndex + 1} during guided tour: ${this._currentTour.tourId}`)\n                );\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public get onLastStep(): boolean {\n        return this._onLastStep;\n    }\n\n    public get onFirstStep(): boolean {\n        return this._onFirstStep;\n    }\n\n    public get onResizeMessage(): boolean {\n        return this._onResizeMessage;\n    }\n\n    public get currentTourStepDisplay(): number {\n        return this._currentTourStepIndex + 1;\n    }\n\n    public get currentTourStepCount(): number {\n        return this._currentTour && this._currentTour.steps ? this._currentTour.steps.length : 0;\n    }\n\n    public get preventBackdropFromAdvancing(): boolean {\n        return this._currentTour && this._currentTour.preventBackdropFromAdvancing;\n    }\n\n    private getPreparedTourStep(index: number): TourStep {\n        return this.setTourOrientation(this._currentTour.steps[index]);\n    }\n\n    private setTourOrientation(step: TourStep): TourStep {\n        const convertedStep = cloneDeep(step);\n        if (\n            convertedStep.orientation\n            && !(typeof convertedStep.orientation === 'string')\n            && (convertedStep.orientation as OrientationConfiguration[]).length\n        ) {\n            (convertedStep.orientation as OrientationConfiguration[]).sort((a: OrientationConfiguration, b: OrientationConfiguration) => {\n                if (!b.maximumSize) {\n                    return 1;\n                }\n                if (!a.maximumSize) {\n                    return -1;\n                }\n                return b.maximumSize - a.maximumSize;\n            });\n\n            let currentOrientation: Orientation = Orientation.Top;\n            (convertedStep.orientation as OrientationConfiguration[]).forEach(\n                (orientationConfig: OrientationConfiguration) => {\n                    if (!orientationConfig.maximumSize || window.innerWidth <= orientationConfig.maximumSize) {\n                        currentOrientation = orientationConfig.orientationDirection;\n                    }\n                }\n            );\n\n            convertedStep.orientation = currentOrientation;\n        }\n        return convertedStep;\n    }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { Orientation, TourStep } from './guided-tour.constants';\nimport { GuidedTourService } from './guided-tour.service';\n\n@Component({\n    selector: 'ngx-guided-tour',\n    template: `\n        <div *ngIf=\"currentTourStep && selectedElementRect && isOrbShowing\"\n                (mouseenter)=\"handleOrb()\"\n                class=\"tour-orb tour-{{ currentTourStep.orientation }}\"\n                [style.top.px]=\"orbTopPosition\"\n                [style.left.px]=\"orbLeftPosition\"\n                [style.transform]=\"orbTransform\">\n                <div class=\"tour-orb-ring\"></div>\n        </div>\n        <div *ngIf=\"currentTourStep && !isOrbShowing\">\n            <div class=\"guided-tour-user-input-mask\" (click)=\"backdropClick($event)\"></div>\n            <div class=\"guided-tour-spotlight-overlay\"\n                [style.top.px]=\"overlayTop\"\n                [style.left.px]=\"overlayLeft\"\n                [style.height.px]=\"overlayHeight\"\n                [style.width.px]=\"overlayWidth\">\n            </div>\n        </div>\n        <div *ngIf=\"currentTourStep && !isOrbShowing\">\n            <div #tourStep *ngIf=\"currentTourStep\"\n                class=\"tour-step tour-{{ currentTourStep.orientation }}\"\n                [ngClass]=\"{\n                    'page-tour-step': !currentTourStep.selector\n                }\"\n                [style.top.px]=\"(currentTourStep.selector && selectedElementRect ? topPosition : null)\"\n                [style.left.px]=\"(currentTourStep.selector && selectedElementRect ? leftPosition : null)\"\n                [style.width.px]=\"(currentTourStep.selector && selectedElementRect ? calculatedTourStepWidth : null)\"\n                [style.transform]=\"(currentTourStep.selector && selectedElementRect ? transform : null)\">\n                <div *ngIf=\"currentTourStep.selector\" class=\"tour-arrow\"></div>\n                <div class=\"tour-block\">\n                    <h3 class=\"tour-title\" *ngIf=\"currentTourStep.title && currentTourStep.selector\">\n                        {{ currentTourStep.title }}\n                    </h3>\n                    <h2 class=\"tour-title\" *ngIf=\"currentTourStep.title && !currentTourStep.selector\">\n                        {{ currentTourStep.title }}\n                    </h2>\n                    <div class=\"tour-content\" [innerHTML]=\"currentTourStep.content\"></div>\n                    <div class=\"tour-buttons\">\n                        <button *ngIf=\"!guidedTourService.onResizeMessage\"\n                            (click)=\"guidedTourService.skipTour()\"\n                            class=\"skip-button link-button\">\n                            Skip\n                        </button>\n                        <button *ngIf=\"!guidedTourService.onLastStep && !guidedTourService.onResizeMessage\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.nextStep()\">\n                            Next&nbsp;&nbsp;{{ guidedTourService.currentTourStepDisplay }}/{{ guidedTourService.currentTourStepCount }}\n                        </button>\n                        <button *ngIf=\"guidedTourService.onLastStep\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.nextStep()\">\n                            Done\n                        </button>\n\n                        <button *ngIf=\"guidedTourService.onResizeMessage\"\n                            class=\"next-button\"\n                            (click)=\"guidedTourService.resetTour()\">\n                            Close\n                        </button>\n                        <button *ngIf=\"!guidedTourService.onFirstStep && !guidedTourService.onResizeMessage\"\n                            class=\"back-button link-button\"\n                            (click)=\"guidedTourService.backStep()\">\n                            Back\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./guided-tour.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class GuidedTourComponent implements AfterViewInit, OnDestroy {\n    @Input() public topOfPageAdjustment ?= 0;\n    @Input() public tourStepWidth ?= 300;\n    @Input() public minimalTourStepWidth ?= 200;\n    @ViewChild('tourStep') public tourStep: ElementRef;\n    public highlightPadding = 4;\n    public currentTourStep: TourStep = null;\n    public selectedElementRect: DOMRect = null;\n    public isOrbShowing = false;\n\n    private _announcementsCount = 0;\n    private resizeSubscription: Subscription;\n    private scrollSubscription: Subscription;\n\n    constructor(\n        public guidedTourService: GuidedTourService\n    ) { }\n\n    private get maxWidthAdjustmentForTourStep(): number {\n        return this.tourStepWidth - this.minimalTourStepWidth;\n    }\n\n    private get widthAdjustmentForScreenBound(): number {\n        if (!this.tourStep) {\n            return 0;\n        }\n        let adjustment = 0;\n        if (this.calculatedLeftPosition < 0) {\n            adjustment = -this.calculatedLeftPosition;\n        }\n        if (this.calculatedLeftPosition > window.innerWidth - this.tourStepWidth) {\n            adjustment = this.calculatedLeftPosition - (window.innerWidth - this.tourStepWidth);\n        }\n\n        return Math.min(this.maxWidthAdjustmentForTourStep, adjustment);\n    }\n\n    public get calculatedTourStepWidth() {\n        return this.tourStepWidth - this.widthAdjustmentForScreenBound;\n    }\n\n    public ngAfterViewInit(): void {\n        this.guidedTourService.guidedTourCurrentStepStream.subscribe((step: TourStep) => {\n            this.currentTourStep = step;\n            if (step && step.selector) {\n                const selectedElement = document.querySelector(step.selector);\n                if (selectedElement) {\n                    this.scrollToAndSetElement();\n                } else {\n                    this.selectedElementRect = null;\n                }\n            } else {\n                this.selectedElementRect = null;\n            }\n        });\n\n        this.guidedTourService.guidedTourOrbShowingStream.subscribe((value: boolean) => {\n            this.isOrbShowing = value;\n        });\n\n        this.resizeSubscription = fromEvent(window, 'resize').subscribe(() => {\n            this.updateStepLocation();\n        });\n\n        this.scrollSubscription = fromEvent(window, 'scroll').subscribe(() => {\n            this.updateStepLocation();\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.resizeSubscription.unsubscribe();\n        this.scrollSubscription.unsubscribe();\n    }\n\n    public scrollToAndSetElement(): void {\n        this.updateStepLocation();\n        // Allow things to render to scroll to the correct location\n        setTimeout(() => {\n            if (!this.isOrbShowing && !this.isTourOnScreen()) {\n                if (this.selectedElementRect && this.isBottom()) {\n                    // Scroll so the element is on the top of the screen.\n                    const topPos = ((window.scrollY + this.selectedElementRect.top) - this.topOfPageAdjustment)\n                        - (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                        + this.getStepScreenAdjustment();\n                    try {\n                        window.scrollTo({\n                            left: null,\n                            top: topPos,\n                            behavior: 'smooth'\n                        });\n                    } catch (err) {\n                        if (err instanceof TypeError) {\n                            window.scroll(0, topPos);\n                        } else {\n                            throw err;\n                        }\n                    }\n                } else {\n                    // Scroll so the element is on the bottom of the screen.\n                    const topPos = (window.scrollY + this.selectedElementRect.top + this.selectedElementRect.height)\n                        - window.innerHeight\n                        + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                        - this.getStepScreenAdjustment();\n                    try {\n                        window.scrollTo({\n                            left: null,\n                            top: topPos,\n                            behavior: 'smooth'\n                        });\n                    } catch (err) {\n                        if (err instanceof TypeError) {\n                            window.scroll(0, topPos);\n                        } else {\n                            throw err;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    public handleOrb(): void {\n        this.guidedTourService.activateOrb();\n        if (this.currentTourStep && this.currentTourStep.selector) {\n            this.scrollToAndSetElement();\n        }\n    }\n\n    private isTourOnScreen(): boolean {\n        return this.tourStep\n            && this.elementInViewport(document.querySelector(this.currentTourStep.selector))\n            && this.elementInViewport(this.tourStep.nativeElement);\n    }\n\n    // Modified from https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    private elementInViewport(element: HTMLElement): boolean {\n        let top = element.offsetTop;\n        const height = element.offsetHeight;\n\n        while (element.offsetParent) {\n            element = (element.offsetParent as HTMLElement);\n            top += element.offsetTop;\n        }\n        if (this.isBottom()) {\n            return (\n                top >= (window.pageYOffset\n                    + this.topOfPageAdjustment\n                    + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n                    + this.getStepScreenAdjustment())\n                && (top + height) <= (window.pageYOffset + window.innerHeight)\n            );\n        } else {\n            return (\n                top >= (window.pageYOffset + this.topOfPageAdjustment - this.getStepScreenAdjustment())\n                && (top + height + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)) <= (window.pageYOffset + window.innerHeight)\n            );\n        }\n    }\n\n    public backdropClick(event: Event): void {\n        if (this.guidedTourService.preventBackdropFromAdvancing) {\n            event.stopPropagation();\n        } else {\n            this.guidedTourService.nextStep();\n        }\n    }\n\n    public updateStepLocation(): void {\n        if (this.currentTourStep && this.currentTourStep.selector) {\n            const selectedElement = document.querySelector(this.currentTourStep.selector);\n            if (selectedElement) {\n                this.selectedElementRect = (selectedElement.getBoundingClientRect() as DOMRect);\n            } else {\n                this.selectedElementRect = null;\n            }\n        } else {\n            this.selectedElementRect = null;\n        }\n    }\n\n    private isBottom(): boolean {\n        return this.currentTourStep.orientation\n            && (this.currentTourStep.orientation === Orientation.Bottom\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n            || this.currentTourStep.orientation === Orientation.BottomRight);\n    }\n\n    public get topPosition(): number {\n        const paddingAdjustment = this.getHighlightPadding();\n\n        if (this.isBottom()) {\n            return this.selectedElementRect.top + this.selectedElementRect.height + paddingAdjustment;\n        }\n\n        return this.selectedElementRect.top - this.getHighlightPadding();\n    }\n\n    public get orbTopPosition(): number {\n        if (this.isBottom()) {\n            return this.selectedElementRect.top + this.selectedElementRect.height;\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.Right\n            || this.currentTourStep.orientation === Orientation.Left\n        ) {\n            return (this.selectedElementRect.top + (this.selectedElementRect.height / 2));\n        }\n\n        return this.selectedElementRect.top;\n    }\n\n    private get calculatedLeftPosition(): number {\n        const paddingAdjustment = this.getHighlightPadding();\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return (this.selectedElementRect.right - this.tourStepWidth);\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return (this.selectedElementRect.left);\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Left) {\n            return this.selectedElementRect.left - this.tourStepWidth - paddingAdjustment;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Right) {\n            return (this.selectedElementRect.left + this.selectedElementRect.width + paddingAdjustment);\n        }\n\n        return (this.selectedElementRect.right - (this.selectedElementRect.width / 2) - (this.tourStepWidth / 2));\n    }\n\n    public get leftPosition(): number {\n        if (this.calculatedLeftPosition >= 0) {\n            return this.calculatedLeftPosition;\n        }\n        const adjustment = Math.max(0, -this.calculatedLeftPosition)\n        const maxAdjustment = Math.min(this.maxWidthAdjustmentForTourStep, adjustment);\n        return this.calculatedLeftPosition + maxAdjustment;\n    }\n\n    public get orbLeftPosition(): number {\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return this.selectedElementRect.right;\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return this.selectedElementRect.left;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Left) {\n            return this.selectedElementRect.left;\n        }\n\n        if (this.currentTourStep.orientation === Orientation.Right) {\n            return (this.selectedElementRect.left + this.selectedElementRect.width);\n        }\n\n        return (this.selectedElementRect.right - (this.selectedElementRect.width / 2));\n    }\n\n    public get transform(): string {\n        if (\n            !this.currentTourStep.orientation\n            || this.currentTourStep.orientation === Orientation.Top\n            || this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.TopLeft\n        ) {\n            return 'translateY(-100%)';\n        }\n        return null;\n    }\n\n    public get orbTransform(): string {\n        if (\n            !this.currentTourStep.orientation\n            || this.currentTourStep.orientation === Orientation.Top\n            || this.currentTourStep.orientation === Orientation.Bottom\n            || this.currentTourStep.orientation === Orientation.TopLeft\n            || this.currentTourStep.orientation === Orientation.BottomLeft\n        ) {\n            return 'translateY(-50%)';\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.TopRight\n            || this.currentTourStep.orientation === Orientation.BottomRight\n        ) {\n            return 'translate(-100%, -50%)';\n        }\n\n        if (\n            this.currentTourStep.orientation === Orientation.Right\n            || this.currentTourStep.orientation === Orientation.Left\n        ) {\n            return 'translate(-50%, -50%)';\n        }\n\n        return null;\n    }\n\n    public get overlayTop(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.top - this.getHighlightPadding();\n        }\n        return 0;\n    }\n\n    public get overlayLeft(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.left - this.getHighlightPadding();\n        }\n        return 0;\n    }\n\n    public get overlayHeight(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.height + (this.getHighlightPadding() * 2);\n        }\n        return 0;\n    }\n\n    public get overlayWidth(): number {\n        if (this.selectedElementRect) {\n            return this.selectedElementRect.width + (this.getHighlightPadding() * 2);\n        }\n        return 0;\n    }\n\n    private getHighlightPadding(): number {\n        let paddingAdjustment = this.currentTourStep.useHighlightPadding ? this.highlightPadding : 0;\n        if (this.currentTourStep.highlightPadding) {\n            paddingAdjustment = this.currentTourStep.highlightPadding;\n        }\n        return paddingAdjustment;\n    }\n\n    // This calculates a value to add or subtract so the step should not be off screen.\n    private getStepScreenAdjustment(): number {\n        if (\n            this.currentTourStep.orientation === Orientation.Left\n            || this.currentTourStep.orientation === Orientation.Right\n        ) {\n            return 0;\n        }\n        const elementHeight = this.selectedElementRect.height\n            + (this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0)\n            + this.tourStep.nativeElement.getBoundingClientRect().height;\n\n        if ((window.innerHeight - this.topOfPageAdjustment) < elementHeight) {\n            return elementHeight - (window.innerHeight - this.topOfPageAdjustment);\n        }\n        return 0;\n    }\n}\n","import { GuidedTourService } from './guided-tour.service';\nimport { GuidedTourComponent } from './guided-tour.component';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\n\n@NgModule({\n    declarations: [\n        GuidedTourComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        GuidedTourComponent\n    ],\n    entryComponents: [\n        GuidedTourComponent\n    ]\n})\nexport class GuidedTourModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: GuidedTourModule,\n            providers: [\n                ErrorHandler,\n                GuidedTourService\n            ]\n        };\n    }\n}\n"],"names":["Subject","fromEvent","debounceTime","cloneDeep","Injectable","ErrorHandler","Component","ViewEncapsulation","Input","ViewChild","NgModule","CommonModule"],"mappings":"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"}
